https://github.com/alibaba/druid/wiki


Druid是Java语言中最好的数据库连接池。Druid能够提供强大的监控和扩展功能。

2. 在哪里下载druid
正式版本下载：
maven中央仓库: http://central.maven.org/maven2/com/alibaba/druid/
3. 怎么获取Druid的源码
Druid是一个开源项目，源码托管在github上，源代码仓库地址是 https://github.com/alibaba/druid 。同时每次Druid发布正式版本和快照的时候，都会把源码打包，你可以从上面的下载地址中找到相关版本的源码

4. 怎么配置maven
Druid 0.1.18 之后版本都发布到maven中央仓库中，所以你只需要在项目的pom.xml中加上dependency就可以了。例如：

	<dependency>
		<groupId>com.alibaba</groupId>
		<artifactId>druid</artifactId>
		<version>${druid-version}</version>
	</dependency>
也可以选择 Maven仓库查找公共的仓库地址: http://www.mvnrepository.com/artifact/com.alibaba/druid

5. 怎么打开Druid的监控统计功能
Druid的监控统计功能是通过filter-chain扩展实现，如果你要打开监控统计功能，配置StatFilter，具体看这里：https://github.com/alibaba/druid/wiki/配置_StatFilter

6. 怎样使用Druid的内置监控页面
内置监控页面是一个Servlet，具体配置看这里： https://github.com/alibaba/druid/wiki/配置_StatViewServlet配置

7. 内置监控中的Web和Spring关联监控怎么配置？
Web关联监控配置
https://github.com/alibaba/druid/wiki/配置_配置WebStatFilter
Spring关联监控配置
https://github.com/alibaba/druid/wiki/配置_Druid和Spring关联监控配置
8. 怎么配置防御SQL注入攻击
Druid提供了WallFilter，它是基于SQL语义分析来实现防御SQL注入攻击的。具体配置看这里： https://github.com/alibaba/druid/wiki/配置-wallfilter

9. Druid有没有参考配置
不同的业务场景需求不同，你可以使用我们的参考配置，但建议你仔细阅读相关文档，了解清楚之后做定制配置。 https://github.com/alibaba/druid/wiki/配置_DruidDataSource参考配置

10. 我想日志记录JDBC执行的SQL，如何配置
Druid提供了Log4jFilter、CommonsLogFilter和Slf4jFilter，具体配置看这里 https://github.com/alibaba/druid/wiki/配置_LogFilter

11. 我的程序可能产生连接泄漏了，有什么办法？
Druid提供了多种监测连接泄漏的手段，具体看这里： https://github.com/alibaba/druid/wiki/连接泄漏监测

12. 在Druid中使用PSCache会有内存占用过大问题么？
连接Oracle数据库，打开PSCache，在其他的数据库连接池都会存在内存占用过多的问题，Druid是唯一解决这个问题的连接池。具体看这里： https://github.com/alibaba/druid/wiki/Oracle数据库下PreparedStatementCache内存问题解决方案

13. 有没有和其他数据库连接池的对比？
各种数据库连接池对比 https://github.com/alibaba/druid/wiki/各种数据库连接池对比
14. 从其他连接池迁移要注意什么？
不同连接池的参数参照对比： http://code.alibabatech.com/wiki/pages/viewpage.action?pageId=6947005
DBCP迁移 https://github.com/alibaba/druid/wiki/DBCP迁移
15. Druid中有没有类似Jboss DataSource中的ExceptionSorter
ExceptionSorter是JBoss DataSource中的优秀特性，Druid也有一样功能的ExceptionSorter，但不用手动配置，自动识别生效的。具体看这里：https://github.com/alibaba/druid/wiki/ExceptionSorter_cn

16. Druid中的maxIdle为什么是没用的？
maxIdle是Druid为了方便DBCP用户迁移而增加的，maxIdle是一个混乱的概念。连接池只应该有maxPoolSize和minPoolSize，druid只保留了maxActive和minIdle，分别相当于maxPoolSize和minPoolSize。

17. 我的应用配置的是JNDI数据源，可以用DruidDataSource么？
DruidDataSource支持JNDI配置，具体看这里：https://github.com/alibaba/druid/wiki/配置_JNDI_Tomcat
具体实现的类是这个：com.alibaba.druid.pool.DruidDataSourceFactory，你可以阅读代码加深理解。

18. 我的应用已使用DBCP，是代码中写死的，怎样更换为Druid？
可以的，Druid提供了一个中完全平滑迁移DBCP的办法。

从http://repo1.maven.org/maven2/com/alibaba/druid/druid-wrapper/ 下载druid-wrapper-xxx.jar
加入druid-xxx.jar
从你的WEB-INF/lib/中删除dbcp-xxx.jar
按需要加上配置，比如JVM启动参数加上-Ddruid.filters=stat，动态配置druid的filters
这种用法，使得可以在一些非自己开发的应用中使用Druid，例如在sonar中部署druid，sonar是一个使用jruby开发的web应用，写死了DBCP，只能够通过这种方法来更换。

19. 我想试用快照版本，怎么获取？
直接获取快照版本的地址是：http://code.alibabatech.com/mvn/snapshots/com/alibaba/druid/ ，使用快照版本建议加入我们QQ群 92748305，遇到问题直接反馈给我们。

20. 有一些SQL执行很慢，我希望日志记录下来，怎么设置？
在StatFilter配置中有慢SQL执行日志记录，看这里 https://github.com/alibaba/druid/wiki/配置_StatFilter

21. 我希望加密我的数据库密码怎么办？
运维和DBA都不希望把密码明文直接写在配置文件中，Druid提供了数据库密码加密的功能。具体看这里： https://github.com/alibaba/druid/wiki/使用ConfigFilter

22. 如何参与Druid的开发
Druid是一个通过github开源的项目，github的特性，使得你很容易参与其中。这里有详细说明 https://github.com/alibaba/druid/wiki/如何参与

23. Druid的发布周期是怎样？
Druid是一个活跃的项目，长期维护。每个月有一个发布窗口，除非遇到重大bug和非常紧急的需求，否则都是每个月最多发布一次。如果没有足够多的需求，发布窗口就不会被使用。

24. 如果DruidDataSource在init的时候失败了，不再使用，是否需要close
是的，如果DruidDataSource不再使用，必须调用close来释放资源，释放的资源包括关闭Create和Destory线程。

25. DruidDataSource支持哪些数据库？
理论上说，支持所有有jdbc驱动的数据库。实际测试过的有

数据库	支持状态
mysql	支持，大规模使用
oracle	支持，大规模使用
sqlserver	支持
postgres	支持
db2	支持
h2	支持
derby	支持
sqlite	支持
sybase	支持
26. Oracle下jdbc executeBatch时，更新行数计算不正确
使用jdbc的executeBatch 方法，如果数据库为oracle，则无论是否成功更新到数据，返回值都是-2，而不是真正被sql更新到的记录数，这是Oracle JDBC Driver的问题，Druid不作特殊处理。

27. Druid如何自动根据URL自动识别DriverClass的
Druid是根据url前缀来识别DriverClass的，这样使得配置更方便简洁。

前缀	DriverCLass	描述信息
jdbc:odps	com.aliyun.odps.jdbc.OdpsDriver
jdbc:derby	org.apache.derby.jdbc.EmbeddedDriver
jdbc:mysql	com.mysql.jdbc.Driver
jdbc:oracle	oracle.jdbc.driver.OracleDriver
jdbc:microsoft	com.microsoft.jdbc.sqlserver.SQLServerDriver
jdbc:sybase:Tds	com.sybase.jdbc2.jdbc.SybDriver
jdbc:jtds	net.sourceforge.jtds.jdbc.Driver
jdbc:postgresql	org.postgresql.Driver
jdbc:fake	com.alibaba.druid.mock.MockDriver
jdbc:mock	com.alibaba.druid.mock.MockDriver
jdbc:hsqldb	org.hsqldb.jdbcDriver
jdbc:db2	COM.ibm.db2.jdbc.app.DB2Driver	DB2的JDBC Driver十分混乱，这个匹配不一定对
jdbc:sqlite	org.sqlite.JDBC
jdbc:ingres	com.ingres.jdbc.IngresDriver
jdbc:h2	org.h2.Driver
jdbc:mckoi	com.mckoi.JDBCDriver
jdbc:cloudscape	COM.cloudscape.core.JDBCDriver
jdbc:informix-sqli	com.informix.jdbc.IfxDriver
jdbc:timesten	com.timesten.jdbc.TimesTenDriver
jdbc:as400	com.ibm.as400.access.AS400JDBCDriver
jdbc:sapdb	com.sap.dbtech.jdbc.DriverSapDB
jdbc:JSQLConnect	com.jnetdirect.jsql.JSQLDriver
jdbc:JTurbo	com.newatlanta.jturbo.driver.Driver
jdbc:firebirdsql	org.firebirdsql.jdbc.FBDriver
jdbc:interbase	interbase.interclient.Driver
jdbc:pointbase	com.pointbase.jdbc.jdbcUniversalDriver
jdbc:edbc	ca.edbc.jdbc.EdbcDriver
jdbc:mimer:multi1	com.mimer.jdbc.Driver
28. 如何保存监控记录
https://github.com/alibaba/druid/wiki/怎么保存Druid的监控记录

29. 我想Log输出SQL执行的信息怎么办？
https://github.com/alibaba/druid/wiki/配置_LogFilter

30. 如何配置Druid内置的log实现
https://github.com/alibaba/druid/wiki/配置druid内置的log实现

31. 如何在Spring Boot中集成Druid连接池和监控？
使用Druid Spring Boot Starter，文档地址：https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter

31. 如何在Spring Boot中添加自定义WallConfig、Filter ？
https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter#如何配置-filter

32. 如何在 Spring Boot 中配置数据库密码加密？
先看常见问题#21，如何生成加密后的密码及秘钥：我希望加密我的数据库密码怎么办？
进行配置
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
# 生成的加密后的密码（原密码 123456）
spring.datasource.password=WVMjPhfXQrIsWRo0/RCqAVvYtTU9WNVToKJohb8AlUmHwnV6vwFL+FM2CNFDMJwGHW1iCmyaUlF+sgvFdogqEA==
# 生成的公钥
public-key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIiwHpFrDijV+GzwRTzWJk8D3j3jFfhsMFJ/7k1NTvBuLgL+TdIHgaMNOIEjHpXzuvX38J3FtOK8hLrySncVGOMCAwEAAQ==
# 配置 connection-properties，启用加密，配置公钥。
spring.datasource.druid.connection-properties=config.decrypt=true;config.decrypt.key=${public-key}
# 启用ConfigFilter
spring.datasource.druid.filter.config.enabled=true
33. 如何设置为让连接池知道数据库已经断开了，并且自动测试连接查询
加入以下配置：

<!-- 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。 -->
<property name="validationQuery" value="SELECT 1" />
<property name="testOnBorrow" value="false" />
<property name="testOnReturn" value="false" />
<property name="testWhileIdle" value="true" />
出错的异常信息摘要： Could not open JDBC Connection for transaction； nested exception is ...jdbc4... No operation allowed after connection closed;




=============
Druid Spring Boot Starter
Maven Central

中文 | English
Druid Spring Boot Starter 用于帮助你在Spring Boot项目中轻松集成Druid数据库连接池和监控。

如何使用
在 Spring Boot 项目中加入druid-spring-boot-starter依赖

Maven

<dependency>
   <groupId>com.alibaba</groupId>
   <artifactId>druid-spring-boot-starter</artifactId>
   <version>1.1.10</version>
</dependency>
Gradle

compile 'com.alibaba:druid-spring-boot-starter:1.1.10'
添加配置

spring.datasource.url=
spring.datasource.username=
spring.datasource.password=
# ...其他配置（可选，不是必须的，使用内嵌数据库的话上述三项也可省略不填）
配置属性
Druid Spring Boot Starter 配置属性的名称完全遵照 Druid，你可以通过 Spring Boot 配置文件来配置Druid数据库连接池和监控，如果没有配置则使用默认值。

JDBC 配置
spring.datasource.druid.url= # 或spring.datasource.url=
spring.datasource.druid.username= # 或spring.datasource.username=
spring.datasource.druid.password= # 或spring.datasource.password=
spring.datasource.druid.driver-class-name= #或 spring.datasource.driver-class-name=
连接池配置
spring.datasource.druid.initial-size=
spring.datasource.druid.max-active=
spring.datasource.druid.min-idle=
spring.datasource.druid.max-wait=
spring.datasource.druid.pool-prepared-statements=
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=
spring.datasource.druid.max-open-prepared-statements= #和上面的等价
spring.datasource.druid.validation-query=
spring.datasource.druid.validation-query-timeout=
spring.datasource.druid.test-on-borrow=
spring.datasource.druid.test-on-return=
spring.datasource.druid.test-while-idle=
spring.datasource.druid.time-between-eviction-runs-millis=
spring.datasource.druid.min-evictable-idle-time-millis=
spring.datasource.druid.max-evictable-idle-time-millis=
spring.datasource.druid.filters= #配置多个英文逗号分隔
....//more
监控配置
# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
spring.datasource.druid.web-stat-filter.enabled= #是否启用StatFilter默认值false
spring.datasource.druid.web-stat-filter.url-pattern=
spring.datasource.druid.web-stat-filter.exclusions=
spring.datasource.druid.web-stat-filter.session-stat-enable=
spring.datasource.druid.web-stat-filter.session-stat-max-count=
spring.datasource.druid.web-stat-filter.principal-session-name=
spring.datasource.druid.web-stat-filter.principal-cookie-name=
spring.datasource.druid.web-stat-filter.profile-enable=

# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
spring.datasource.druid.stat-view-servlet.enabled= #是否启用StatViewServlet（监控页面）默认值为false（考虑到安全问题默认并未启动，如需启用建议设置密码或白名单以保障安全）
spring.datasource.druid.stat-view-servlet.url-pattern=
spring.datasource.druid.stat-view-servlet.reset-enable=
spring.datasource.druid.stat-view-servlet.login-username=
spring.datasource.druid.stat-view-servlet.login-password=
spring.datasource.druid.stat-view-servlet.allow=
spring.datasource.druid.stat-view-servlet.deny=

# Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
spring.datasource.druid.aop-patterns= # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
Druid Spring Boot Starter 不仅限于对以上配置属性提供支持，DruidDataSource 内提供setter方法的可配置属性都将被支持。你可以参考WIKI文档或通过IDE输入提示来进行配置。配置文件的格式你可以选择.properties或.yml，效果是一样的，在配置较多的情况下推荐使用.yml。

如何配置多数据源
添加配置
spring.datasource.url=
spring.datasource.username=
spring.datasource.password=

# Druid 数据源配置，继承spring.datasource.* 配置，相同则覆盖
...
spring.datasource.druid.initial-size=5
spring.datasource.druid.max-active=5
...

# Druid 数据源 1 配置，继承spring.datasource.druid.* 配置，相同则覆盖
...
spring.datasource.druid.one.max-active=10
spring.datasource.druid.one.max-wait=10000
...

# Druid 数据源 2 配置，继承spring.datasource.druid.* 配置，相同则覆盖
...
spring.datasource.druid.two.max-active=20
spring.datasource.druid.two.max-wait=20000
...
强烈注意：Spring Boot 2.X 版本不再支持配置继承，多数据源的话每个数据源的所有配置都需要单独配置，否则配置不会生效

创建数据源
@Primary
@Bean
@ConfigurationProperties("spring.datasource.druid.one")
public DataSource dataSourceOne(){
    return DruidDataSourceBuilder.create().build();
}
@Bean
@ConfigurationProperties("spring.datasource.druid.two")
public DataSource dataSourceTwo(){
    return DruidDataSourceBuilder.create().build();
}
如何配置 Filter
你可以通过 spring.datasource.druid.filters=stat,wall,log4j ... 的方式来启用相应的内置Filter，不过这些Filter都是默认配置。如果默认配置不能满足你的需求，你可以放弃这种方式，通过配置文件来配置Filter，下面是例子。

# 配置StatFilter
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.db-type=h2
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000

# 配置WallFilter
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=h2
spring.datasource.druid.filter.wall.config.delete-allow=false
spring.datasource.druid.filter.wall.config.drop-table-allow=false

# 其他 Filter 配置不再演示
目前为以下 Filter 提供了配置支持，请参考文档或者根据IDE提示（spring.datasource.druid.filter.*）进行配置。

StatFilter
WallFilter
ConfigFilter
EncodingConvertFilter
Slf4jLogFilter
Log4jFilter
Log4j2Filter
CommonsLogFilter
要想使自定义 Filter 配置生效需要将对应 Filter 的 enabled 设置为 true ，Druid Spring Boot Starter 默认禁用 StatFilter，你也可以将其 enabled 设置为 true 来启用它。

如何获取 Druid 的监控数据
Druid 的监控数据可以在开启 StatFilter 后通过 DruidStatManagerFacade 进行获取，获取到监控数据之后你可以将其暴露给你的监控系统进行使用。Druid 默认的监控系统数据也来源于此。下面给做一个简单的演示，在 Spring Boot 中如何通过 HTTP 接口将 Druid 监控数据以 JSON 的形式暴露出去，实际使用中你可以根据你的需要自由地对监控数据、暴露方式进行扩展。

@RestController
public class DruidStatController {
    @GetMapping("/druid/stat")
    public Object druidStat(){
        // DruidStatManagerFacade#getDataSourceStatDataList 该方法可以获取所有数据源的监控数据，除此之外 DruidStatManagerFacade 还提供了一些其他方法，你可以按需选择使用。
        return DruidStatManagerFacade.getInstance().getDataSourceStatDataList();
    }
}
[
  {
    "Identity": 1583082378,
    "Name": "DataSource-1583082378",
    "DbType": "h2",
    "DriverClassName": "org.h2.Driver",
    "URL": "jdbc:h2:file:./demo-db",
    "UserName": "sa",
    "FilterClassNames": [
      "com.alibaba.druid.filter.stat.StatFilter"
    ],
    "WaitThreadCount": 0,
    "NotEmptyWaitCount": 0,
    "NotEmptyWaitMillis": 0,
    "PoolingCount": 2,
    "PoolingPeak": 2,
    "PoolingPeakTime": 1533782955104,
    "ActiveCount": 0,
    "ActivePeak": 1,
    "ActivePeakTime": 1533782955178,
    "InitialSize": 2,
    "MinIdle": 2,
    "MaxActive": 30,
    "QueryTimeout": 0,
    "TransactionQueryTimeout": 0,
    "LoginTimeout": 0,
    "ValidConnectionCheckerClassName": null,
    "ExceptionSorterClassName": null,
    "TestOnBorrow": true,
    "TestOnReturn": true,
    "TestWhileIdle": true,
    "DefaultAutoCommit": true,
    "DefaultReadOnly": null,
    "DefaultTransactionIsolation": null,
    "LogicConnectCount": 103,
    "LogicCloseCount": 103,
    "LogicConnectErrorCount": 0,
    "PhysicalConnectCount": 2,
    "PhysicalCloseCount": 0,
    "PhysicalConnectErrorCount": 0,
    "ExecuteCount": 102,
    "ErrorCount": 0,
    "CommitCount": 100,
    "RollbackCount": 0,
    "PSCacheAccessCount": 100,
    "PSCacheHitCount": 99,
    "PSCacheMissCount": 1,
    "StartTransactionCount": 100,
    "TransactionHistogram": [
      55,
      44,
      1,
      0,
      0,
      0,
      0
    ],
    "ConnectionHoldTimeHistogram": [
      53,
      47,
      3,
      0,
      0,
      0,
      0,
      0
    ],
    "RemoveAbandoned": false,
    "ClobOpenCount": 0,
    "BlobOpenCount": 0,
    "KeepAliveCheckCount": 0,
    "KeepAlive": false,
    "FailFast": false,
    "MaxWait": 1234,
    "MaxWaitThreadCount": -1,
    "PoolPreparedStatements": true,
    "MaxPoolPreparedStatementPerConnectionSize": 5,
    "MinEvictableIdleTimeMillis": 30001,
    "MaxEvictableIdleTimeMillis": 25200000,
    "LogDifferentThread": true,
    "RecycleErrorCount": 0,
    "PreparedStatementOpenCount": 1,
    "PreparedStatementClosedCount": 0,
    "UseUnfairLock": true,
    "InitGlobalVariants": false,
    "InitVariants": false
  }
]
IDE 提示支持


演示
克隆项目，运行test包内的DemoApplication。

参考
Druid Wiki

Spring Boot Reference
