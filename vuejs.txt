1.1 前端技术的发展002
1.1.1 从静态走向动态 002
1.1.2 从后端走向前端 003
1.1.3 从前端走向全端 005
1.2 MVVM族员——Vue.js 008
1.2.1 从MVC到MVVM 008
1.2.2 Vue.js简介 009
1.3 Vue与React 010
1.3.1 虚拟DOM 010
1.3.2 功能性组件 011
1.3.3 轻量级——将与核心库无关的业务封装成独立库 011
1.3.4 视图模板 011
1.3.5 其他 012
1.4 Vue与Angular 013
1.4.1 模板语法 013
1.4.2 脏检测 013
1.4.3 双向数据绑定 014
1.4.4 学习曲线 015
第2章 基本介绍 016
2.1 安装和引入016
2.1.1 如何引入Vue.js 016
2.1.2 安装Vue Devtools 017
2.2 Vue实例介绍 019
2.2.1 简单实例 019
2.2.2 生命周期 020
目录
VIII
Vue. js从入门到项目实战
2.3 数据响应式原理024
2.3.1 初识数据链 024
2.3.2 函数式编程 025
2.3.3 Vue中的数据链 026
2.3.4 数据绑定视图 028
第3章 Vue语法 030
3.1 插值绑定030
3.1.1 文本插值 030
3.1.2 HTML插值 031
3.2 属性绑定033
3.2.1 指令v-bind 033
3.2.2 类名和样式绑定 034
3.3 事件绑定037
3.3.1 指令v-on 037
3.3.2 常见修饰符 039
3.3.3 按键修饰符 041
3.3.4 组合修饰符 042
3.4 双向绑定044
3.4.1 指令v-model 044
3.4.2 v-model与修饰符 047
3.4.3 v-model与自定义组件 048
3.5 条件渲染和列表渲染050
3.5.1 指令v-if和v-show 050
3.5.2 指令v-for 053
3.5.3 列表渲染中的key 057
第4章 Vue选项 059
4.1 数据和方法059
4.1.1 数据选项 059
IX
目 录
4.1.2 属性选项 065
4.1.3 方法选项 067
4.1.4 计算属性 068
4.1.5 侦听属性 072
4.2 DOM渲染 074
4.2.1 指定被挂载元素 074
4.2.2 视图的字符串模板 075
4.2.3 渲染函数render 076
4.2.4 选项的优先级 083
4.3 封装复用085
4.3.1 过滤器 085
4.3.2 自定义指令 086
4.3.3 组件的注册 090
4.3.4 混入的使用 091
第5章 Vue内置组件 095
5.1 组件服务095
5.1.1 动态组件 095
5.1.2 使用插槽分发内容 097
5.1.3 组件的缓存 103
5.2 过渡效果104
5.2.1 单节点的过渡 104
5.2.2 多节点的过渡 113
第6章 Vue项目化 117
6.1 快速构建项目117
6.1.1 Vue CLI简介 117
6.1.2 使用Vue CLI构建项目 118
6.1.3 项目目录介绍 119
6.2 前端路由123
6.2.1 前端路由的简单实现 123
6.2.2 Vue中的前端路由 127
6.3 状态管理132
6.3.1 对象引用 133
6.3.2 状态管理器Vuex 133
6.3.3 在项目中使用Vuex 138
第二篇 实战篇 —— 提升于项目
第7章 打造线上商城（一） 144
7.1 项目规划144
7.1.1 需求分析 144
7.1.2 流程分析 146
7.2 项目展示147
7.2.1 首页 147
7.2.2 商品详情 150
7.2.3 购物车 151
7.2.4 订单 152
第8章 打造线上商城（二） 154
8.1 项目构建154
8.1.1 目录结构 154
8.1.2 webpack是什么？ 155
8.1.3 Font Awesome图标库 157
8.2 动态资源和数据159
8.2.1 关于配置 159
8.2.2 动态资源 162
8.2.3 动态数据的存储 163
8.3 自定义组件164
8.3.1 幻灯片 164
8.3.2 复选框 168
第9章 企业官网的建设 171
9.1 响应式设计171
9.1.1 响应式设计 171
9.1.2 媒体查询 172
9.1.3 JS布局 174
9.2 页面开发175
9.2.1 页面切换 175
9.2.2 Swiper组件 176
9.2.3 划分内容区 177
9.3 多语种网站的建设179
9.3.1 将一切纳入配置 180
9.3.2 将配置绑定到视图 183
第10章 我的掌上新闻 186
10.1 应用介绍186
10.1.1 应用首屏 186
10.1.2 应用首页 187
10.1.3 新闻详情 189
10.1.4 搜索页面 190
10.1.5 搜索结果 193
10.2 项目构建193
10.2.1 项目结构 193
10.2.2 数据流图 198
第11章 SVG画图板 199
11.1 SVG简介 199
11.1.1 有关SVG的三个问题 199
11.1.2 基本图形的使用 201
11.1.3 SVG中的渐变 202
11.2 项目介绍 204
11.2.1 页面介绍 204
11.2.2 代码简析 208
附录 拓 展 篇
附录A Git入门 218
附录B NPM入门 221
附录C Webpack入门 224
附录D 闭包和对象引用 230
附录E 常见的ECMAScript 6语法 233

1．2　Vue．js简史　2
第　一篇 变化侦测
第　2章 Object的变化侦测　6
2．1　什么是变化侦测　6
2．2　如何追踪变化　7
2．3　如何收集依赖　7
2．4　依赖收集在哪里　8
2．5　依赖是谁　10
2．6　什么是Watcher　10
2．7　递归侦测所有key　12
2．8　关于Object的问题　13
2．9　总结　14
第3章　Array的变化侦测　16
3．1　如何追踪变化　16
3．2　拦截器　17
3．3　使用拦截器覆盖Array原型　18
3．4　将拦截器方法挂载到数组的属性上　19
3．5　如何收集依赖　21
3．6　依赖列表存在哪儿　22
3．7　收集依赖　23
3．8　在拦截器中获取Observer实例　24
3．9　向数组的依赖发送通知　25
3．10　侦测数组中元素的变化　26
3．11　侦测新增元素的变化　27
3．11．1　获取新增元素　27
3．11．2　使用Observer侦测新增元素　28
3．12　关于Array的问题　29
3．13　总结　29
第4章　变化侦测相关的API实现原理　31
4．1　vm．$watch　31
4．1．1　用法　31
4．1．2　watch的内部原理　32
4．1．3　deep参数的实现原理　36
4．2　vm．$set　38
4．2．1　用法　38
4．2．2　Array的处理　39
4．2．3　key已经存在于target中　40
4．2．4　处理新增的属性　40
4．3　vm．$delete　41
4．3．1　用法　42
4．3．2　实现原理　42
4．4　总结　45
第二篇　虚拟DOM
第5章　虚拟DOM简介　48
5．1　什么是虚拟DOM　48
5．2　为什么要引入虚拟DOM　51
5．3　Vue．js中的虚拟DOM　51
5．4　总结　53
第6章　VNode　54
6．1　什么是VNode　54
6．2　VNode的作用　55
6．3　VNode的类型　56
6．3．1　注释节点　57
6．3．2　文本节点　57
6．3．3　克隆节点　57
6．3．4　元素节点　58
6．3．5　组件节点　59
6．3．6　函数式组件　59
6．4　总结　59
第7章　patch　60
7．1　patch介绍　60
7．1．1　新增节点　61
7．1．2　删除节点　62
7．1．3　更新节点　63
7．1．4　小结　63
7．2　创建节点　64
7．3　删除节点　67
7．4　更新节点　68
7．4．1　静态节点　68
7．4．2　新虚拟节点有文本属性　69
7．4．3　新虚拟节点无文本属性　69
7．4．4　小结　70
7．5　更新子节点　72
7．5．1　更新策略　72
7．5．2　优化策略　77
7．5．3　哪些节点是未处理过的　82
7．5．4　小结　83
7．6　总结　86
第三篇　模板编译原理
第8章　模板编译　88
8．1　概念　88
8．2　将模板编译成渲染函数　89
8．2．1　解析器　90
8．2．2　优化器　91
8．2．3　代码生成器　91
8．3　总结　92
第9章　解析器　93
9．1　解析器的作用　93
9．2　解析器内部运行原理　94
9．3　HTML解析器　99
9．3．1　运行原理　100
9．3．2　截取开始标签　101
9．3．3　截取结束标签　107
9．3．4　截取注释　108
9．3．5　截取条件注释　108
9．3．6　截取DOCTYPE　109
9．3．7　截取文本　109
9．3．8　纯文本内容元素的处理　112
9．3．9　使用栈维护DOM层级　114
9．3．10　整体逻辑　114
9．4　文本解析器　117
9．5　总结　121
第　10章 优化器　122
10．1　找出所有静态节点并标记　125
10．2　找出所有静态根节点并标记　127
10．3　总结　129
第　11章 代码生成器　130
11．1　通过AST生成代码字符串　131
11．2　代码生成器的原理　134
11．2．1　元素节点　134
11．2．2　文本节点　136
11．2．3　注释节点　137
11．3　总结　137
第四篇　整体流程
第　12章 架构设计与项目结构　140
12．1　目录结构　140
12．2　架构设计　143
12．3　总结　145
第　13章 实例方法与全局API的
实现原理　146
13．1　数据相关的实例方法　147
13．2　事件相关的实例方法　147
13．2．1　vm．$on　148
13．2．2　vm．$off　149
13．2．3　vm．$once　152
13．2．4　vm．$emit　153
13．3　生命周期相关的实例方法　154
13．3．1　vm．$forceUpdate　154
13．3．2　vm．$destroy　155
13．3．3　vm．$nextTick　159
13．3．4　vm．$mount　169
13．4　全局API的实现原理　178
13．4．1　Vue．extend　178
13．4．2　Vue．nextTick　182
13．4．3　Vue．set　183
13．4．4　Vue．delete　183
13．4．5　Vue．directive　184
13．4．6　Vue．filter　185
13．4．7　Vue．component　186
13．4．8　Vue．use　188
13．4．9　Vue．mixin　189
13．4．10　Vue．compile　190
13．4．11　Vue．version　190
13．5　总结　191
第　14章 生命周期　192
14．1　生命周期图示　192
14．1．1　初始化阶段　193
14．1．2　模板编译阶段　194
14．1．3　挂载阶段　194
14．1．4　卸载阶段　194
14．1．5　小结　194
14．2　从源码角度了解生命周期　195
14．3　errorCaptured与错误处理　199
14．4　初始化实例属性　203
14．5　初始化事件　204
14．6　初始化inject　208
14．6．1　provide/inject的使用方式　208
14．6．2　inject的内部原理　210
14．7　初始化状态　215
14．7．1　初始化props　216
14．7．2　初始化methods　224
14．7．3　初始化data　225
14．7．4　初始化computed　228
14．7．5　初始化watch　238
14．8　初始化provide　241
14．9　总结　241
第　15章 指令的奥秘　242
15．1　指令原理概述　242
15．1．1　v-if指令的原理概述　243
15．1．2　v-for指令的原理概述　243
15．1．3　v-on指令　244
15．2　自定义指令的内部原理　246
15．3　虚拟DOM钩子函数　250
15．4　总结　251
第　16章 过滤器的奥秘　252
16．1　过滤器原理概述　253
16．1．1　串联过滤器　254
16．1．2　滤器接收参数　254
16．1．3　resolveFilter的内部原理　255
16．2　解析过滤器　256
16．3　总结　258
第　17章 最佳实践　259
17．1　为列表渲染设置属性key　259
17．2　在v-if/v-if-else/v-else中使用key　259
17．3　路由切换组件不变　260
17．3．1　路由导航守卫beforeRouteUpdate　261
17．3．2　观察 $route对象的变化　261
17．3．3　为router-view组件添加属性key　262
17．4　为所有路由统一添加query　262
17．4．1　使用全局守卫beforeEach　263
17．4．2　使用函数劫持　263
17．5　区分Vuex与props的使用边界　264
17．6　避免v-if和v-for一起使用　264
17．7　为组件样式设置作用域　266
17．8　避免在scoped中使用元素选择器　267
17．9　避免隐性的父子组件通信　268
17．10　单文件组件如何命名　268
17．10．1　单文件组件的文件名的大小写　268
17．10．2　基础组件名　269
17．10．3　单例组件名　270
17．10．4　紧密耦合的组件名　270
17．10．5　组件名中的单词顺序　271
17．10．6　完整单词的组件名　272
17．10．7　组件名为多个单词　273
17．10．8　模板中的组件名大小写　273
17．10．9　JS/JSX中的组件名大小写　274
17．11　自闭合组件　275
17．12　prop名的大小写　276
17．13　多个特性的元素　276
17．14　模板中简单的表达式　276
17．15　简单的计算属性　277
17．16　指令缩写　278
17．17　良好的代码顺序　278
17．17．1　组件/实例的选项的顺序　278
17．17．2　元素特性的顺序　280
17．17．3　单文件组件顶级元素的顺序　281

前言
第1章 Vue开发入门
第2章 项目1：Markdown笔记本
第3章 项目2：城堡决斗游戏
第4章 高级项目设置
第5章 项目3：支持中心
第6章 项目4：博客地图
第7章 项目5：在线商店以及扩展
第8章 项目6：使用Meteor开发实时仪表盘

第1章 大觅项目架构设计
任务1 大觅项目业务场景
任务2 大觅项目环境搭建
任务3 前端架构设计
本章作业
第2章 大觅项目中ES6的使用
任务1 let和const命令
任务2 变量的解构赋值
任务3 使用箭头函数
任务4 Map数据结构
任务5 Module的语法
任务6 Promise对象
本章作业
第3章 大觅项目的路由配置
任务1 什么是前端路由
任务2 Vue Router基本使用
任务3 页面间导航
本章作业
第4章 初识Vue.js
任务1 Vue.js是什么
任务2 Vue实例与数据绑定
任务3 class与style绑定
本章作业
第5章 大觅项目中与服务端通信
任务1 connect-mock-middleware工具的使用
任务2 Mock.js语法
任务3 snail mock工具使用
任务4 Axios的安装及配置
任务5 大觅项目的服务端通信配置
本章作业
第6章 Vue.js指令
任务1 条件渲染指令
任务2 列表渲染v-for指令
任务3 方法与事件
任务4 v-model与表单
本章作业
第7章 组件详解
任务1 组件概念与复用
任务2 使用props传递数据
任务3 组件通信
任务4 slot分发内容
本章作业
第8章 计算属性和侦听器
任务1 计算属性
任务2 侦听器
本章作业
第9章 大觅项目中插件的使用
任务1 百度地图插件
任务2 状态管理与Vuex
任务3 二维码插件
本章作业
第10章 大觅项目总结
任务1 大觅项目起步
任务2 梳理大觅项目技能点

为什么选择 Vue.js
安装和设置
vue-loader和webpack
模板（Template）、数据（Data）和指令（Directive）
v-if vs v-show
模板中的循环
属性绑定
响应式
响应式如何实现
注意事项
双向数据绑定
动态设置 HTML
方法
this
计算属性
侦听器
监听data对象中某个对象的属性
获取旧值
深度监听
过滤器
使用 ref 直接访问元素
输入和事件
v-on 简写
事件修饰符
生命周期钩子
自定义指令
钩子函数参数
过渡和动画
CSS 过渡
JavaScript 动画
总结
第2章　Vue.js 组件
组件基础
数据、方法和计算属性
传递数据
Prop验证
Prop的大小写
响应式
数据流和 .sync 修饰符
自定义输入组件与 v-model
使用插槽（slot）将内容传递给组件
默认内容
具名插槽
作用域插槽
自定义事件
混入
混入对象和组件的合并
vue-loader和.vue 文件
非 Prop 属性
组件和 v-for 指令
总结
第3章　使用Vue添加样式
Class绑定
内联样式绑定
数组语法
多重值
用vue-loader实现Scoped CSS
用 vue-loader 实现 CSS Modules
预处理器
总结
第4章　render 函数和 JSX
标签名称
数据对象
子节点
JSX
总结
第5章　使用vue-router实现客户端路由
安装
基本用法
HTML5 History 模式
动态路由
响应路由变化
路由参数作为组件属性传入
嵌套路由
重定向和别名
链接导航
tag 属性
active-class 属性
原生事件
编程式导航
导航守卫
路由独享守卫
组件内部守卫
路由顺序
404页面
路由命名
总结
第6章　使用 vuex 实现状态管理
安装
概念
State 及其辅助函数
State 辅助函数
Getter
Getter辅助函数
Mutation
Mutation 辅助函数
Mutation 必须是同步函数
Action
Action 辅助函数
参数解构
Promise 与 Action
Module
文件结构
带命名空间的模块
总结
第7章　对Vue组件进行测试
测试单个组件
介绍 vue-test-utils
查询 DOM
挂载选项
模拟和存根数据
测试事件
总结
附录A　搭建Vue开发环境
附录B　Vue与React

第1章 Vue.js概述 1
1.1 单页应用的出现 1
1.2 为什么要使用Vue.js 2
1.2.1 单页应用 2
1.2.2 知名的单页应用（SPA）框架对比 5
1.2.3 被腾讯和阿里巴巴所青睐 9
1.2.4 用到Vue.js的项目 9
第2章 原生的Vue.js 10
2.1 极速入门 10
2.2 实际项目 11
2.2.1 运行整个项目 12
2.2.2 HTML代码的部分 18
2.2.3 HTML代码的部分 19
2.2.4 js代码部分 21
2.2.5 小结 25
第3章 Webpack+Vue.js开发准备 26
3.1 学习过程 26
3.1.1 可以跳过的章节 26
3.1.2 简写说明 26
3.1.3 本书例子文件下载 27
3.2 NVM、NPM与Node 27
3.2.1 Windows下的安装 28
3.2.2 Linux、Mac下的安装 31
3.2.3 运行 31
3.2.4 使用NVM安装或管理node版本 32
3.2.5 删除NVM 33
3.2.6 加快NVM和NPM的下载速度 33
3.3 Git在Windows下的使用 34
3.3.1 为什么要使用Git Bash 34
3.3.2 安装git客户端 35
3.3.3 使用Git Bash 40
3.4 Webpack 41
3.4.1 Webpack功能 42
3.4.2 Webpack安装与使用 43
3.5 开发环境的搭建 44
3.5.1 安装Vue.js 44
3.5.2 运行 vue 44
3.6 Webpack下的Vue.js项目文件结构 45
3.6.1 build文件夹 46
3.6.2 config 文件夹 46
3.6.3 dist文件夹 47
3.6.4 node_modules 文件夹 47
3.6.5 src 文件夹 49
第4章 Webpack+Vue.js实战 50
4.1 创建一个页面 50
4.1.1 新建路由 50
4.1.2 创建一个新的Component 51
4.1.3 为页面添加样式 52
4.1.4 定义并显示变量 53
4.2 Vue.js中的ECMAScript 55
4.2.1 let、var、常量与全局变量 55
4.2.2 导入代码：import 56
4.2.3 方便其他代码使用自己: export default {..} 56
4.2.4 ES中的简写 57
4.2.5 箭头函数=> 57
4.2.6 hash中同名的key、value的简写 58
4.2.7 分号可以省略 58
4.2.8 解构赋值 58
4.3 Vue.js 渲染页面的过程和原理 59
4.3.1 渲染过程1：js入口文件 59
4.3.2 渲染过程2：静态的HTML页面（index.html） 61
4.3.3 渲染过程3：main.js中的Vue定义 62
4.3.4 渲染原理与实例 63
4.4 视图中的渲染 64
4.4.1 渲染某个变量 64
4.4.2 方法的声明和调用 65
4.4.3 事件处理：v-on 66
4.5 视图中的Directive（指令） 67
4.5.1 前提：在directive中使用表达式（Expression） 67
4.5.2 循环：v-for 67
4.5.3 判断：v-if 69
4.5.4 v-if与v-for的优先级 70
4.5.5 v-bind 72
4.5.6 v-on 73
4.5.7 v-model 与双向绑定 75
4.6 发送http请求 77
4.6.1 调用http请求 78
4.6.2 远程接口的格式 80
4.6.3 设置Vue.js开发服务器的代理 81
4.6.4 打开页面，查看http请求 83
4.6.5 把结果渲染到页面中 84
4.6.6 如何发起post请求 85
4.7 不同页面间的参数传递 86
4.7.1 回顾：现有的接口 86
4.7.2 显示博客详情页 87
4.7.3 新增路由 88
4.7.4 修改博客列表页的跳转方式1：使用事件 89
4.7.5 修改博客列表页的跳转方式2：使用v-link 91
4.8 路由 92
4.8.1 基本用法 92
4.8.2 跳转到某个路由时带上参数 93
4.8.3 根据路由获取参数 94
4.9 使用样式 94
4.10 双向绑定 96
4.11 表单项目的绑定 99
4.12 表单的提交 102
4.13 Component 组件 105
4.13.1 如何查看文档 105
4.13.2 Component的重要作用: 重用代码 106
4.13.3 组件的创建 106
4.13.4 向组件中传递参数 108
4.13.5 脱离Webpack，在原生Vue.js中创建component 110

第5章 运维和发布Vue.js项目 112
5.1 打包和部署 112
5.1.1 打包 112
5.1.2 部署 114
5.2 解决域名问题与跨域问题 117
5.2.1 域名404 问题 118
5.2.2 跨域问题 119
5.2.3 解决域名问题和跨域问题 120
5.3 如何Debug 122
5.3.1 时刻留意本地开发服务器 122
5.3.2 看developer tools提出的日志 122
5.3.3 查看页面给出的错误提示 123
5.4 基本命令 125
5.4.1 建立新项目 125
5.4.2 安装所有的第三方包 125
5.4.3 在本地运行 126
5.4.4 打包编译 127
第6章 进阶知识 128
6.1 js的作用域与this 128
6.1.1 作用域 128
6.1.2 this 130
6.1.3 实战经验 131
6.2 Mixin 133
6.3 使用Computed Properties（计算得到的属性）和watchers（监听器） 135
6.3.1 典型例子 135
6.3.2 Computed Properties 与 普通方法的区别 136
6.3.3 watched property 137
6.3.4 Computed Property的setter（赋值函数) 140
6.4 Component（组件）进阶 141
6.4.1 实际项目中的Component 142
6.4.2 Prop 144
6.4.3 Attribute 146
6.5 Slot 146
6.5.1 普通的Slot 147
6.5.2 named slot 148
6.5.3 slot 的默认值 149
6.6 Vuex 150
6.6.1 正常使用的顺序 150
6.6.2 Computed属性 154
6.6.3 Vuex原理图 155
6.7 Vue.js的生命周期 156
6.8 最佳实践 157
6.9 Event Handler 事件处理 158
6.9.1 支持的Event 158
6.9.2 使用 v-on 进行事件绑定 159
6.10 与CSS预处理器结合使用 168
6.10.1 SCSS 168
6.10.2 LESS 169
6.10.3 SASS 170
6.10.4 在Vue.js中使用CSS预编译器 171
6.11 自定义 Directive 172
6.11.1 例子 172
6.11.2 自定义Directive的命名方法 173
6.11.3 钩子方法（Hook Functions） 174
6.11.4 自定义Directive可以接收到的参数 174
6.11.5 实战经验 175
第7章 实战周边及相关工具 176
7.1 微信支付 176
7.2 Hybrid App：混合式App 177
7.3 安装 Vue.js的开发工具： Vue.js devtool 178
7.4 如何阅读官方文档 181
第8章 实战项目 183
8.1 准备1：文字需求 183
8.2 准备2：需求原型图 186
8.2.1 明确前端页面 186
8.2.2 如何画原型图 186
8.2.3 首页 186
8.2.4 商品列表页 187
8.2.5 商品详情页 187
8.2.6 购物车页面 188
8.2.7 支付页面 188
8.2.8 我的页面 189
8.2.9 我的订单列表页面 189
8.2.10 总结 190
8.3 准备3：微信的相关账号和开发者工具 190
8.3.1 微信相关账号的申请 190
8.3.2 微信开发者工具 190
8.4 项目的搭建 192
8.5 用户的注册和微信授权 193
8.6 登录状态的保持 202
8.7 首页轮播图 203
8.8 底部Tab 213
8.9 商品列表页 217
8.10 商品详情页 219
8.11 购物车 225
8.13 微信支付 233
8.14 回顾 244