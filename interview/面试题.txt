
剑指offer刷一遍、数据结构、JavaSE、JVM、多线程
①剑指offer有些搞不懂的直接跳过，等下个月第二遍再刷；
②数据结构重点是各种树、二叉树、红黑树的一些特性以及链表的特性；
③JavaSE主要是类对象接口的区别，能不能继承，Static的特点，各种Hashmap，ArrayList等集合框架的原理源码；
④JVM是根据网上整合的高频面试题进行学习的，刷了一遍面试题之后才去看周志华的《深入理解Java虚拟机》。
JVM难的不是JVM布局，垃圾回收算法等这些理论，而是结合代码和项目场景。
比如说一段代码，有很多个类、方法，其中又有静态类和全局变量，这时候项目跑起来的时候哪些先加载，哪些变量存放在哪个区
不止要懂理论，还要结合代码懂理论。还有就是项目中的OOM，栈溢出，JVM的参数调优等等。

⑤多线程也是刷网上面试题和博客的，几本多线程的书都是一坨一坨的，理解不来。
先动手把几个多线程实现方法实现了一遍，然后分析优缺点，再由此切进去线程不安全和各种锁。
多线程学习不同JVM，自己多动手，多调试一下，控制台都会告诉你答案。

剑指offer二刷，数据库、操作系统、网络、准备面试
①剑指offer第二遍重点刷第一遍时思路懂代码不懂的。
②数据库刷了牛客网SQL实战100多题的，其他都是索引原理，悲观乐观锁等理论。
③操作系统刷高频面试题。死锁的产生条件、解决方法等等，资源调度算法，并发和并行等。
④网络也是刷面试题。三次握手四次挥手以及为什么要这样做、TCP和UDP、网页请求过程、DNS解析过程、网络模型、响应码的意思等。
⑤我每刷一道算法或者理解了一道面试题都会进行整理，所以到面试之前看看整理的文档和博客就行，异常轻松。
三月份收了京东、瓜子二手车等二线大厂的offer。
四月：
大数据项目、手写剑指offer、继续面试
①三月份被阿里菜鸟部门的三面面试官怼了一发，说简历没有大数据项目面大数据岗，理论会再多有什么用，于是打算在四月份补一下项目。
②在补项目的同时，不忘算法，练习白板写代码。
四月份收了腾讯、去哪儿一些offer，腾讯和去哪儿终面都得现场面，所以一天飞北京，一天飞深圳。
拿到腾讯offer的时候跟HR商量能不能去上海或者北京的base，HR说不行，于是就没去了。

最后选择了去Kyligence实习了，刚好趁这个机会学习了Kylin源码，看了Hadoop和Spark的部分源码。后面的面试也是为了倒逼自己学习，在面试中找不足，也顺便整理了一些面试资料。

其次，底层理论一定要会，不然大厂无望。算法一定要硬刚，总共就那几种题型。

别的同学放寒假的时候，自己一个人在学校旁边租了个小房子学到过年前夕；为了巩固实习的项目更好地面试，跑了几次之前实习的公司请同事吃饭问项目细节；

为了阿里面试用肝硬刚，连夜复习（不过这样对身体不好，还是不建议）

简历投的太多，信息都被卖了，而且一听到手机响就以为是面试电话；去腾讯终面，在深大的通宵自习室连夜复习。

以上是我过去一年的准备，接下来再说说我从投递简历到收offer这一个月的准备。

1.复习算法。把以前刷过的算法题分类整理了一下，因为之前有整理过，所以复习起来没用多少时间，还特意去理解了长长的KMP算法，LRU算法。

2.复习理论基础。除了复习整理的面经和资料之外，还特意去了解了一下Golang，因为头条用的go语言。

3.特意准备了几个项目技术难点，能在面试的时候炫一下。




头条一面的面试题，主要focus在java和项目，下面我列举了一些我还记得的，给大家看看：
讲讲倒排索引的原理？讲讲redis里面的哈希表？happen-before的规则？
volatile修饰符，synchronize锁，聊一下你对它们的理解？
java单例模式的实现，懒汉、饿汉？进程与线程的区别，多进程和多线程的区别？
HashMap原理，为什么用红黑树，红黑树的特点？快排时间空间复杂度，最好最坏的情况，优化方案？
TCP的拥塞控制，具体过程是怎么样的？UDP有拥塞控制吗？如何解决？
讲讲了解的垃圾回收算法和回收器，什么时候执行STOP THE WORLD？
了解Go语言吗？



二面重点则转移到了大数据，针对大数据相关的技术的各种问题，炮火依旧猛烈：
Kylin的项目架构？Paxos和ZAB协议，CAP理论，分区容错性的意义？
HDFS的读取、写入，容错处理（从源码级别解释），Namenode HA，脑裂，Yarn的调度机制。
大表Join小表优化，如何处理数据倾斜？讲一下最大堆和最小堆
MapReduce的过程（第一版和第二版的）、MapReduce shuffle，Spark shuffle。
Hive的内部表和外部表区别、数仓建模模型、数仓分层、雪花模型和星型模型。了解ClickHouse吗？它与Kylin的区别？




LRU算法实现（伪代码）链表倒数第K个数（讲思路）
一堆螺丝和螺母用最短时间匹配（代码实现）
求每天浏览页面的新用户（Hive QL实现）
求抖音小视频每日点击量最高的10个（Hash + 最大堆）


这次的笔试里总共有5道，我AC了2.5题，第一题90%，第二题90%，第三题70%，不算好，但勉强通过了。
去年的这个时候我可是连题目都看不懂的，看得懂的只知道用嘴怎么说，不会用代码实现。
通过这段时间的算法训练，总结了如下几点算法笔试经验：
1.平时刷题一定要总结归纳，最好分类。
比如关于树的题型，链表的，数组等等，观察它们的解题思路，总结出解题套路。
2.积累工具类算法。
什么叫工具类算法？就是你解一道算法题需要用到另一种算法，这个被调用的算法就是解决这道算法题的工具。
比如常见的「深度优先遍历」、「广度优先遍历」、「01背包」、「KMP算法」以及常见的选择和排序算法都是经常使用的工具类算法。

1.特意准备几个面试题源码
像我在回答一些中规中矩面试题的时候，都会从源码角度出发。比如常见的HashMap等集合类，多线程的各种锁以及大数据框架的部分源码。

2.特意准备项目难点
面一些大厂的时候避免不了被问到项目难点，不可能用普通Bug含糊过去啊。

这边可以从项目用到的技术栈出发，去寻找技术栈在项目中会存在的难点，然后套进自己的项目，找个自己能懂，最好能全懂的。

3.针对性去了解公司的技术栈使用情况。
比如头条使用Go，众人皆知，那为什么我不突击学习一下呢？
比如我从业内人士得知头条最早使用的是Kylin框架，后面慢慢转为ClickHouse。
