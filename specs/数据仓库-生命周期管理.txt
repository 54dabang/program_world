路标
初始活动
技术路径
数据路径
BI应用路径
总结活动
应当避免的常见错误



生命周期管理

从数据价值及数据使用性方面综合考虑，
数据的生命周期管理是存储管理的一项重要手段。生命周期管理的根本
目的就是用最少的存储成本来满足最大的业务需求，使数据价值最大化。


生命周期管理策略
1 .周期性删除策略
所存储的数据都有一定的有效期，从数据创建开始到过时，可以周
期性删除X 天前的数据。


例如对于MySQL 业务库同步到Max Compute
的全量数据，或者ETL 过程产生的结果数据，其中某些历史数据可能
已经没有价值，且占用存储成本，那么针对无效的历史数据就可以进行
定期清理。


2 . 彻底删除策略
无用表数据或者ETL 过程产生的临时数据，以及不需要保留的数
据，可以进行及时删除，包括删除元数据。


3 . 永久保留策略
重要且不可恢复的底层数据和应用数据需要永久保留。
比如底层交易的增量数据，出于存储成本与数据价值平衡的考虑，需要永久保留，
用于历史数据的恢复与核查。

4 . 极限存储策略

极限存储可以超高压缩重复镜像数据，通过平台化配置手段实现透明


访问：
缺点是对数据质量要求非常高，配置与维护成本比较高，
建议一个分区有超过5GB 的镜像数据（如商品维表、用户维表）就使用极限存储。

5 . 冷数据管理策略
冷数据管理是永久保留策略的扩展。
永久保留的数据需要迁移到冷
数据中心进行永久保存，同时将Max Compute 中对应的数据删除。

一般将重要且不可恢复的、占用存储空间大于lOOTB ，且访问频次较低的数据进行冷备，
例如3 年以上的日志数据。

6 . 增量表merge 全量表策略

对于某些特定的数据，极限存储在使用性与存储成本方面的优势不是很明显，

需要改成增量同步与全量merge 的方式，

对于对应的delta增量表的保留策略，目前默认保留93 天。

例如，交易增量数据，使用
订单创建日期或者订单结束日期作为分区，同时将未完结订单放在最大分区中，

对于存储，一个订单在表里只保留一份；
对于用户使用，通过分区条件就能查询某一段时间的数据。


通用的生命周期管理矩阵
随着业务的发展和不断的数据实践，我们慢慢摸索出一套适合大数
据生命周期管理的规范，主要通过对历史数据的等级划分与对表类型的
划分生成相应的生命周期管理矩阵。

1 . 历史数据等级划分
目前我们对历史数据进行了重要等级的划分，主要将历史数据划分
为PO 、Pl 、P2 、P3 四个等级，其具体定义如下。

• PO ：非常重要的主题域数据和非常重要的应用数据，具有不可恢
复性，如交易、日志、集团KPI 数据、IPO 关联表。

• Pl ：重要的业务数据和重要的应用数据，具有不可恢复性，如重
要的业务产品数据。

• P2 ：重要的业务数据和重要的应用数据，具有可恢复性，如交易
线ETL 产生的中间过程数据。


• P3 ： 不重要的业务数据和不重要的应用数据，具有可恢复性，如
某些SNS 产品报表。


2 . 表类型划分
( 1) 事件型流水表（增量表）
事件型流水表（增量表）指数据无重复或者无主键数据，如日志。
(2 ）事件型镜像表（增量表）
事件型镜像表（增量表）指业务过程性数据，有主键，但是对于同
样主键的属性会发生缓慢变化，如交易、订单状态与时间会根据业务发
生变更。
(3 ）维表
维表包括维度与维度属性数据，如用户表、商品表。
(4) Merge 全量表
Merge 全量表包括业务过程性数据或者维表数据。由于数据本身有
‘


新增的或者发生状态变更，对于同样主键的数据可能会保留多份，因此
可以对这些数据根据主键进行Merge 操作，主键对应的属性只会保留最
新状态，历史状态保留在前一天分区中。例如，用户表、交易表等都可
以进行Merge 操作。
( 5) ETL 临时表
ETL 临时表是指ETL 处理过程中产生的临时表数据，一般不建议
保留，最多7 天。
(6) TT 临时数据
TT 拉取的数据和DbSync 产生的临时数据最终会流转到ODS 层，
ODS 层数据作为原始数据保留下来，从而使得TT&DbSync 上游数据成
为临时数据。这类数据不建议保留很长时间，生命周期默认设置为93
天，可以根据实际情况适当减少保留天数。
(7 ）普通全量表
很多小业务数据或者产品数据， BI 一般是直接全量拉取，这种方
式效率快，对存储压力也不是很大，而且表保留很长时间，可以根据历
史数据等级确定保留策略。
通过上述历史数据等级划分与表类型划分，生成相应的生命周期管
理矩阵，如表14.3 所示。





表14 . 3 生命周期管理矩阵
PO P1 P2 P3
可I件型流水表（增
永久保留3 年365 天180 天
fl±表）
事件型镜像表（增
永久保留3 年365 天1 80 天
主I表）
ODS 层
维表（全E表）
33 天＋极限33 天＋极限33 天＋极限33 天＋极限
存储存储存储存储
Merge 全:Ll表2 天2 天2 天2 天
普通全盘表3 年365 天365 天180 天
新同步全显表3 天3 天3 天3 天
281



PO P1 P2 P 3
事件型流水表（增
永久保留3 年365 天1 80 天
量表）
事件型镜像表（增
永久保留3 年365 天1 8 0 天
DWD 层量表）
维表（ 全量表）
33 天＋极限33 天＋极限33 天＋极限3 3 天＋极限
存储存储存储存储
普通全盘表3 年365 天365 天1 80 天
D WS 层各粒度数据永久保留3 年3 年3 年
临时存储区
ETL 临时表7 天3 天3 天3 天
π 临时数据7 天7 天7 天7 天
运营报表永久保留
应用层对外数据7 年
内部产品3 年


通用的生命周期管理矩阵

大数据生命周期管理的规范，

主要通过对历史数据的等级划分与对表类型的划分生成相应的生命周期管理矩阵。

1 . 历史数据等级划分

目前我们对历史数据进行了重要等级的划分，主要将历史数据划分
为PO 、Pl 、P2 、P3 四个等级，其具体定义如下。
• PO ：非常重要的主题域数据和非常重要的应用数据，具有不可恢复性，如交易、日志、集团KPI 数据、IPO 关联表。
• Pl ：重要的业务数据和重要的应用数据，具有不可恢复性，如重要的业务产品数据。
• P2 ：重要的业务数据和重要的应用数据，具有可恢复性，如交易线ETL 产生的中间过程数据。
• P3 ： 不重要的业务数据和不重要的应用数据，具有可恢复性，如某些SNS 产品报表。

2 . 表类型划分

( 1) 事件型流水表（增量表）
事件型流水表（增量表）指数据无重复或者无主键数据，如日志。

(2 ）事件型镜像表（增量表）

事件型镜像表（增量表）指业务过程性数据，有主键，

但是对于同样主键的属性会发生缓慢变化，如交易、订单状态与时间会根据业务发生变更。

(3 ）维表
维表包括维度与维度属性数据，如用户表、商品表。


(4) Merge 全量表

Merge 全量表包括业务过程性数据或者维表数据。由于数据本身有
新增的或者发生状态变更，对于同样主键的数据可能会保留多份，
因此可以对这些数据根据主键进行Merge 操作，主键对应的属性只会保留最新状态，历史状态保留在前一天分区中。

例如，用户表、交易表等都可以进行Merge 操作。


( 5) ETL 临时表

ETL 临时表是指ETL 处理过程中产生的临时表数据，一般不建议保留，最多7 天。


(6) TT 临时数据

TT 拉取的数据和DbSync 产生的临时数据最终会流转到ODS 层，

ODS 层数据作为原始数据保留下来，从而使得TT&DbSync 上游数据成为临时数据。

这类数据不建议保留很长时间，生命周期默认设置为93天，可以根据实际情况适当减少保留天数。


(7 ）普通全量表

很多小业务数据或者产品数据， BI 一般是直接全量拉取，这种方
式效率快，对存储压力也不是很大，而且表保留很长时间，可以根据历
史数据等级确定保留策略。
通过上述历史数据等级划分与表类型划分，生成相应的生命周期管
理矩阵，如表14.3 所示。











Max Compute 集群中海量数据的存储和大量计算任务每天都会消耗
巨额戚本，并且随着数据量的不断增长，这个成本还在逐步增加。如何
在服务好业务的前提下，更好地管控数据成本，提升资源利用率， 已成
为数据资产管理工作中非常重要的一环。
在阿里巴巴集团内部，大部分数据都会存储在Max Co m pute 集群
上，数据以数据表的形式存在，并且数据表之间存在比较复杂的关联和
上下游依赖关系。可以把数据表之间的依赖关系用树形结构形象化地表
示， 如图14 .3 所示。图中的A 、B 、C 等代表不同的数据表，带箭头的
连线代表数据表之间的依赖和关联关系。比如数据表B 、C 、D 都依赖
数据表A ，数据表E 依赖数据表B 和C


Max Compute 中的任何一个计算任务都会涉及计算和存储资源的消
耗，其中计算资源的消耗主要考虑CPU 消耗。为了下面更好地描述数
据计量计费的算法和规则，特做如下定义：
CPU 消耗的单位定义为CU,
代表CPU 的一个核心（ Core ）运行一天的消耗量。


存储资源的消耗主
要考虑磁盘存储的消耗，这里采用国际通用的存储单位PB 来衡量。例
如：计算资源的单价为1 元／CU ，存储资源的单价为1 元／PB 天

